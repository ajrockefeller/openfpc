


## Notes on session indexing with cxtracker data into DB

To have access to search through connection data (If you want to,
and you dont have any other connection tracking software like NetFlow etc.)
you can enable cxtracker to extract metadata of the connections, which
then will store it to disk where a perl agent will load the sessions into a DB.

Session data will take up a lot of space in the DB, but its not necessary
or the job of OpenFPC to retain session data beyond the time of the last pcap data.

For session data to be present in OpenFPC, cxtracker and ofcp-cx2db.pl
needs to be running.

You can now use the OpenFPC webgui to search connection, click on the connection
of choice, and have the pcap served to your webbrowser, where you probably want 
to save it to disk or open it in wireshark etc.

Installing cxtracker:
$ git clone git://github.com/gamelinux/cxtracker.git
$ less cxtracker/doc/INSTALL
# Follow the INSTALL instructions

Also remember to edit openfpc/www/index.php and set the DB configuration and
edit "Settings" to fit your needs.

# Prepare the mysql database (Quick and dirty)
CREATE DATABASE ofpc;
GRANT USAGE ON *.*  TO 'ofpc'@'localhost' IDENTIFIED BY 'ofpc';
GRANT ALL ON ofpc.* TO 'ofpc'@'localhost' IDENTIFIED BY 'ofpc';
FLUSH PRIVILEGES;

# Quick notes on MySQL and IPv6 support
You need to add two function to mysql to handle IPv6 
INET_ATON6 and INET_NTOA6:

-----8<-----

DELIMITER //
CREATE FUNCTION INET_ATON6(n CHAR(39))
RETURNS DECIMAL(39) UNSIGNED
DETERMINISTIC
BEGIN
    RETURN CAST(CONV(SUBSTRING(n FROM  1 FOR 4), 16, 10) AS DECIMAL(39))
                       * 5192296858534827628530496329220096 -- 65536 ^ 7
         + CAST(CONV(SUBSTRING(n FROM  6 FOR 4), 16, 10) AS DECIMAL(39))
                       *      79228162514264337593543950336 -- 65536 ^ 6
         + CAST(CONV(SUBSTRING(n FROM 11 FOR 4), 16, 10) AS DECIMAL(39))
                       *          1208925819614629174706176 -- 65536 ^ 5
         + CAST(CONV(SUBSTRING(n FROM 16 FOR 4), 16, 10) AS DECIMAL(39))
                       *               18446744073709551616 -- 65536 ^ 4
         + CAST(CONV(SUBSTRING(n FROM 21 FOR 4), 16, 10) AS DECIMAL(39))
                       *                    281474976710656 -- 65536 ^ 3
         + CAST(CONV(SUBSTRING(n FROM 26 FOR 4), 16, 10) AS DECIMAL(39))
                       *                         4294967296 -- 65536 ^ 2
         + CAST(CONV(SUBSTRING(n FROM 31 FOR 4), 16, 10) AS DECIMAL(39))
                       *                              65536 -- 65536 ^ 1
         + CAST(CONV(SUBSTRING(n FROM 36 FOR 4), 16, 10) AS DECIMAL(39))
         ;
END;
//

CREATE FUNCTION INET_NTOA6(n DECIMAL(39) UNSIGNED)
RETURNS CHAR(39)
DETERMINISTIC
BEGIN
  DECLARE a CHAR(39)             DEFAULT '';
  DECLARE i INT                  DEFAULT 7;
  DECLARE q DECIMAL(39) UNSIGNED DEFAULT 0;
  DECLARE r INT                  DEFAULT 0;
  WHILE i DO
    -- DIV doesn't work with nubers > bigint
    SET q := FLOOR(n / 65536);
    SET r := n MOD 65536;
    SET n := q;
    SET a := CONCAT_WS(':', LPAD(CONV(r, 10, 16), 4, '0'), a);

    SET i := i - 1;
  END WHILE;

  SET a := TRIM(TRAILING ':' FROM CONCAT_WS(':',
                                            LPAD(CONV(n, 10, 16), 4, '0'),
                                            a));

  RETURN a;

END;
//
DELIMITER ;


